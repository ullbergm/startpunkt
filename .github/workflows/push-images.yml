name: Push Images

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: "${{ github.repository }}"
  IMAGE_FULL_NAME: "ghcr.io/${{ github.repository }}"
  MANDREL_IMAGE: "quay.io/quarkus/ubi-quarkus-mandrel-builder-image"
  MANDREL_VERSION: "23.1.4.0-Final"
  LATEST_IMAGE_TAG: "latest"
  JAVA_VERSION: '21'

on:
  workflow_run:
    workflows:
      - "Build and test"
    branches:
      - dev
      - main
    types:
      - completed
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

# Only process one workflow run at a time
concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: false

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.conditional.outputs.run }}
    steps:
      - name: Conditional job
        id: conditional
        run: |
            echo "repository: ${{ github.repository }}"
            echo "ref: ${{ github.ref }}"
            echo "event name: ${{ github.event_name }}"
            echo "workflow run event: ${{ github.event.workflow_run.event }}"
            echo "workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"

            echo "run=${{
              (github.repository == 'ullbergm/startpunkt' && ((github.ref == 'refs/heads/dev') || (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v'))) &&
              (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && (github.event.workflow_run.event == 'push' || github.event.workflow_run.event == 'workflow_dispatch') && github.event.workflow_run.conclusion == 'success'))
            }}" >>$GITHUB_OUTPUT

  build-native-images:
    needs: init
    if: ${{ needs.init.outputs.run == 'true' }}
    runs-on: ubuntu-latest
    name: "Build Native images"
    steps:
      - uses: actions/checkout@v5

      - name: üìù Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{env.IMAGE_FULL_NAME}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
          flavor: |
            latest=auto

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: maven

      - name: Build native executable with Quarkus
        working-directory: .
        run: |
          ./mvnw -B clean package -DskipTests -Pnative \
            -Dmaven.compiler.release=${{ env.JAVA_VERSION }} \
            -Dquarkus.http.host=0.0.0.0 \
            -Dquarkus.native.container-build=true \
            -Dquarkus.native.builder-image=${{ env.MANDREL_IMAGE }}:${{ env.MANDREL_VERSION }}-java${{ env.JAVA_VERSION }}-amd64 \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          file: ./src/main/docker/Dockerfile.native-micro
          tags: ${{ steps.meta.outputs.tags }}

      - name: Save native image to artifact
        uses: ishworkh/container-image-artifact-upload@v2.0.0
        with:
          image: "${{ steps.meta.outputs.tags }}"

  push-images:
    needs:
      - build-native-images
    runs-on: ubuntu-latest
    name: "Push images to registry"
    steps:
      - uses: actions/checkout@v5

      - name: üìù Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ${{env.IMAGE_FULL_NAME}}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
          flavor: |
            latest=auto

      - name: Retrieve saved image from artifact
        uses: ishworkh/container-image-artifact-download@v2.1.0
        with:
          image: "${{ steps.meta.outputs.tags }}"

      - name: üîë Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Push images to registry
        working-directory: .
        run: "docker push -a ${{ env.IMAGE_FULL_NAME }}"
