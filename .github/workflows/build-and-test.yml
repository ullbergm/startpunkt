name: Build and test

env:
  MANDREL_VERSION: 23.1.4.0-Final
  JAVA_VERSION: '21'
  SONAR_ORGANIZATION: magnus-ullberg
  SONAR_PROJECTKEY: magnus-ullberg_startpunkt
  SONAR_HOST_URL: https://sonarcloud.io

on:
  push:
    paths-ignore:
      - deploy/**
      - docs/**
      - '**/*.md'
      - .github/**
      - renovate.json
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
    paths-ignore:
      - deploy/**
      - docs/**
      - '**/*.md'
      - .github/**
      - renovate.json
  workflow_dispatch: null

concurrency:
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{github.event.pull_request.id }}
  cancel-in-progress: true

jobs:
  simple-build-test:
    runs-on: ubuntu-latest
    if: github.repository == 'ullbergm/startpunkt'
    name: build-test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Setup Java ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v4
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: temurin
          cache: maven

      - name: 'build-test-jvm-java-${{ env.JAVA_VERSION }}'
        working-directory: .
        run: >-
          if [[ "${{ github.repository }}" != "ullbergm/startpunkt" ]] || ${{ startsWith(github.ref, 'refs/heads/renovate') }}; then
            echo "Skipping Sonar analysis"
            ./mvnw -B -fae clean verify -Dquarkus.http.host=0.0.0.0 -Dmaven.compiler.release=${{ env.JAVA_VERSION }}
          else
            echo "Running Sonar analysis"
            ./mvnw -B -fae clean verify sonar:sonar -Dquarkus.http.host=0.0.0.0 -Dmaven.compiler.release=${{ env.JAVA_VERSION }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} -Dsonar.projectKey=${{ env.SONAR_PROJECTKEY }} -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish JUnit test results to GitHub
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/target/surefire-reports/*.xml'

  native-build-test:
    runs-on: ubuntu-latest
    if: github.repository == 'ullbergm/startpunkt'
    name: native-build-test
    steps:
      - uses: actions/checkout@v4

      - name: Cache and restore Mandrel distro
        id: check-mandrel-cache
        uses: actions/cache@v4
        with:
          path: 'mandrel-${{ env.MANDREL_VERSION }}-${{ env.JAVA_VERSION }}.tar.gz'
          key: 'mandrel-distro-${{ env.MANDREL_VERSION }}-${{ env.JAVA_VERSION }}'

      - name: Download Mandrel
        if: steps.check-mandrel-cache.outputs.cache-hit != 'true'
        run: >
          download_url="https://github.com/graalvm/mandrel/releases/download/mandrel-${MANDREL_VERSION}/mandrel-java${{ env.JAVA_VERSION }}-linux-amd64-${MANDREL_VERSION}.tar.gz"

          wget -q -O mandrel-${{ env.MANDREL_VERSION }}-${{ env.JAVA_VERSION }}.tar.gz $download_url

      - name: Setup Maven+OpenJDK Distro
        uses: actions/setup-java@v4
        with:
          distribution: jdkfile
          jdkFile: 'mandrel-${{ env.MANDREL_VERSION }}-${{ env.JAVA_VERSION }}.tar.gz'
          java-version: '${{ env.JAVA_VERSION }}'
          architecture: x64
          cache: maven

      - name: 'build-test-native-java-${{ env.JAVA_VERSION }}'
        working-directory: .
        run: |
          ./mvnw -B -fae clean verify -Pnative \
            -Dquarkus.http.host=0.0.0.0 \
            -Dmaven.compiler.release=${{ env.JAVA_VERSION }} \
            -Dquarkus.native.container-build=false

      - name: Publish JUnit test results to GitHub
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/target/surefire-reports/*.xml'
